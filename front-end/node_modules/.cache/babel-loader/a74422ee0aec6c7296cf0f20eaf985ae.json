{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SanchitKumar\\\\dev\\\\finalproject-deployed\\\\front-end\\\\src\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Signup.css\";\nimport logo from \"./bitcoin-3089728__340.webp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [status, setStatus] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    // if the user is logged-in, save the token to local storage\n    if (status.success && status.token) {\n      localStorage.setItem(\"token\", status.token); // store the token into localStorage\n\n      localStorage.setItem(\"user\", status.username);\n    }\n  }, [status]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // create an object with the data we want to send to the server\n      const requestData = {\n        username: e.target.username.value,\n        // gets the value of the field in the submitted form with name='username'\n        password: e.target.password.value // gets the value of the field in the submitted form with name='password',\n\n      }; // send the request to the server api to authenticate\n\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND}/login`, requestData); // store the response data into the data state variable\n\n      setStatus(response.data);\n    } catch (err) {\n      // throw an error\n      setErrorMessage(\"You entered invalid credentials.\");\n    }\n  };\n\n  if (!status.success) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CRYPTO PORTFOLIOS Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", status.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Enter username...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter password...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Bitcoin\",\n        height: \"250\",\n        width: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this); // otherwise, if the user has successfully logged-in, redirect them to a different page\n  // in this example, we simply redirect to the home page, but a real app would redirect to a page that shows content only available to logged-in users\n  else return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 15\n  }, this);\n};\n\n_s(Login, \"8PUDPmL3q6IdPNo6wF2bzgT6Cv0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/SanchitKumar/dev/finalproject-deployed/front-end/src/Login.js"],"names":["React","useState","useEffect","Redirect","axios","logo","Login","props","status","setStatus","errorMessage","setErrorMessage","success","token","localStorage","setItem","username","handleSubmit","e","preventDefault","requestData","target","value","password","response","post","process","env","REACT_APP_BACKEND","data","err","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Signup.css\";\r\nimport logo from \"./bitcoin-3089728__340.webp\";\r\nconst Login = (props) => {\r\n  const [status, setStatus] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // if the user is logged-in, save the token to local storage\r\n    if (status.success && status.token) {\r\n      localStorage.setItem(\"token\", status.token); // store the token into localStorage\r\n      localStorage.setItem(\"user\", status.username);\r\n    }\r\n  }, [status]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // create an object with the data we want to send to the server\r\n      const requestData = {\r\n        username: e.target.username.value, // gets the value of the field in the submitted form with name='username'\r\n        password: e.target.password.value, // gets the value of the field in the submitted form with name='password',\r\n      };\r\n      // send the request to the server api to authenticate\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BACKEND}/login`,\r\n        requestData\r\n      );\r\n      // store the response data into the data state variable\r\n      setStatus(response.data);\r\n    } catch (err) {\r\n      // throw an error\r\n      setErrorMessage(\"You entered invalid credentials.\");\r\n    }\r\n  };\r\n\r\n  if (!status.success)\r\n    return (\r\n      <div>\r\n        <div className=\"content\">\r\n          <h1>CRYPTO PORTFOLIOS Log in</h1>\r\n          <p>{errorMessage}</p>\r\n          <p> {status.message} </p>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>Username: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Enter username...\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <label>Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter password...\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <input type=\"submit\" value=\"Log In\" />\r\n          </form>\r\n        </div>\r\n        <div className=\"content\">\r\n          <img src={logo} alt=\"Bitcoin\" height=\"250\" width=\"400\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  // otherwise, if the user has successfully logged-in, redirect them to a different page\r\n  // in this example, we simply redirect to the home page, but a real app would redirect to a page that shows content only available to logged-in users\r\n  else return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}